{"version":3,"file":"visual.js","mappings":"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","sources":["webpack://rVisualSample118F63583603487791208F4FB8B1D475/./src/settings.ts","webpack://rVisualSample118F63583603487791208F4FB8B1D475/./src/visual.ts","webpack://rVisualSample118F63583603487791208F4FB8B1D475/../src/dataViewObject.ts","webpack://rVisualSample118F63583603487791208F4FB8B1D475/../src/dataViewObjects.ts","webpack://rVisualSample118F63583603487791208F4FB8B1D475/../src/dataViewObjectsParser.ts","webpack://rVisualSample118F63583603487791208F4FB8B1D475/external var \"Function('return this')()\"","webpack://rVisualSample118F63583603487791208F4FB8B1D475/webpack/bootstrap","webpack://rVisualSample118F63583603487791208F4FB8B1D475/webpack/runtime/define property getters","webpack://rVisualSample118F63583603487791208F4FB8B1D475/webpack/runtime/hasOwnProperty shorthand","webpack://rVisualSample118F63583603487791208F4FB8B1D475/webpack/runtime/make namespace object","webpack://rVisualSample118F63583603487791208F4FB8B1D475/./.tmp/precompile/visualPlugin.ts"],"sourcesContent":["/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\n\"use strict\";\n\nimport { dataViewObjectsParser } from \"powerbi-visuals-utils-dataviewutils\";\nimport DataViewObjectsParser = dataViewObjectsParser.DataViewObjectsParser;\n\nexport class VisualSettings extends DataViewObjectsParser {\n  public rcv_script: rcv_scriptSettings = new rcv_scriptSettings();\n  public settings: CorrPlotSettings = new CorrPlotSettings();\n}\n\nexport class CorrPlotSettings {\n  public method: string = \"circle\";\n}\n\nexport class rcv_scriptSettings {\n  public provider;\n  public source;\n}","/*\n*  Power BI Visual CLI\n*\n*  Copyright (c) Microsoft Corporation\n*  All rights reserved.\n*  MIT License\n*\n*  Permission is hereby granted, free of charge, to any person obtaining a copy\n*  of this software and associated documentation files (the \"\"Software\"\"), to deal\n*  in the Software without restriction, including without limitation the rights\n*  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n*  copies of the Software, and to permit persons to whom the Software is\n*  furnished to do so, subject to the following conditions:\n*\n*  The above copyright notice and this permission notice shall be included in\n*  all copies or substantial portions of the Software.\n*\n*  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n*  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n*  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n*  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n*  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n*  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n*  THE SOFTWARE.\n*/\n\n\"use strict\";\nimport powerbi from \"powerbi-visuals-api\";\nimport VisualConstructorOptions = powerbi.extensibility.visual.VisualConstructorOptions;\nimport VisualUpdateOptions = powerbi.extensibility.visual.VisualUpdateOptions;\nimport IVisual = powerbi.extensibility.visual.IVisual;\nimport EnumerateVisualObjectInstancesOptions = powerbi.EnumerateVisualObjectInstancesOptions;\nimport VisualObjectInstance = powerbi.VisualObjectInstance;\nimport DataView = powerbi.DataView;\nimport IViewport = powerbi.IViewport;\nimport VisualObjectInstanceEnumerationObject = powerbi.VisualObjectInstanceEnumerationObject;\n\nimport { VisualSettings } from \"./settings\";\nexport class Visual implements IVisual {\n    private imageDiv: HTMLDivElement;\n    private imageElement: HTMLImageElement;\n    private settings: VisualSettings;\n\n    public constructor(options: VisualConstructorOptions) {\n        this.imageDiv = document.createElement(\"div\");\n        this.imageDiv.className = \"rcv_autoScaleImageContainer\";\n        this.imageElement = document.createElement(\"img\");\n        this.imageElement.className = \"rcv_autoScaleImage\";\n        this.imageDiv.appendChild(this.imageElement);\n        options.element.appendChild(this.imageDiv);\n    }\n    \n\n    public update(options: VisualUpdateOptions): void {\n        if (!options ||\n            !options.type ||\n            !options.viewport ||\n            !options.dataViews ||\n            options.dataViews.length === 0 ||\n            !options.dataViews[0]) {\n            return;\n        }\n        const dataView: DataView = options.dataViews[0];\n\n        this.settings = Visual.parseSettings(dataView);\n\n        let imageUrl: string = null;\n        if (dataView.scriptResult && dataView.scriptResult.payloadBase64) {\n            imageUrl = \"data:image/png;base64,\" + dataView.scriptResult.payloadBase64;\n        }\n\n        if (imageUrl) {\n            this.imageElement.src = imageUrl;\n        } else {\n            this.imageElement.src = null;\n        }\n\n        this.onResizing(options.viewport);\n    }\n\n    public onResizing(finalViewport: IViewport): void {\n        this.imageDiv.style.height = finalViewport.height + \"px\";\n        this.imageDiv.style.width = finalViewport.width + \"px\";\n        this.imageElement.style.height = finalViewport.height + \"px\";\n        this.imageElement.style.width = finalViewport.width + \"px\";\n    }\n\n    private static parseSettings(dataView: DataView): VisualSettings {\n        return <VisualSettings>VisualSettings.parse(dataView);\n    }\n    /**\n     * This function gets called for each of the objects defined in the capabilities files and allows you to select which of the\n     * objects and properties you want to expose to the users in the property pane.\n     */\n    public enumerateObjectInstances(options: EnumerateVisualObjectInstancesOptions):\n        VisualObjectInstance[] | VisualObjectInstanceEnumerationObject {\n        return VisualSettings.enumerateObjectInstances(this.settings || VisualSettings.getDefault(), options);\n    }\n}\n","export function getValue(object, propertyName, defaultValue) {\r\n    if (!object) {\r\n        return defaultValue;\r\n    }\r\n    let propertyValue = object[propertyName];\r\n    if (propertyValue === undefined) {\r\n        return defaultValue;\r\n    }\r\n    return propertyValue;\r\n}\r\n/** Gets the solid color from a fill property using only a propertyName */\r\nexport function getFillColorByPropertyName(object, propertyName, defaultColor) {\r\n    let value = getValue(object, propertyName);\r\n    if (!value || !value.solid) {\r\n        return defaultColor;\r\n    }\r\n    return value.solid.color;\r\n}\r\n//# sourceMappingURL=dataViewObject.js.map","import * as DataViewObject from \"./dataViewObject\";\r\n/** Gets the value of the given object/property pair. */\r\nexport function getValue(objects, propertyId, defaultValue) {\r\n    if (!objects) {\r\n        return defaultValue;\r\n    }\r\n    return DataViewObject.getValue(objects[propertyId.objectName], propertyId.propertyName, defaultValue);\r\n}\r\n/** Gets an object from objects. */\r\nexport function getObject(objects, objectName, defaultValue) {\r\n    if (objects && objects[objectName]) {\r\n        return objects[objectName];\r\n    }\r\n    return defaultValue;\r\n}\r\n/** Gets the solid color from a fill property. */\r\nexport function getFillColor(objects, propertyId, defaultColor) {\r\n    const value = getValue(objects, propertyId);\r\n    if (!value || !value.solid) {\r\n        return defaultColor;\r\n    }\r\n    return value.solid.color;\r\n}\r\nexport function getCommonValue(objects, propertyId, defaultValue) {\r\n    const value = getValue(objects, propertyId, defaultValue);\r\n    if (value && value.solid) {\r\n        return value.solid.color;\r\n    }\r\n    if (value === undefined\r\n        || value === null\r\n        || (typeof value === \"object\" && !value.solid)) {\r\n        return defaultValue;\r\n    }\r\n    return value;\r\n}\r\n//# sourceMappingURL=dataViewObjects.js.map","import * as DataViewObjects from \"./dataViewObjects\";\r\nexport class DataViewObjectsParser {\r\n    static getDefault() {\r\n        return new this();\r\n    }\r\n    static createPropertyIdentifier(objectName, propertyName) {\r\n        return {\r\n            objectName,\r\n            propertyName\r\n        };\r\n    }\r\n    static parse(dataView) {\r\n        let dataViewObjectParser = this.getDefault(), properties;\r\n        if (!dataView || !dataView.metadata || !dataView.metadata.objects) {\r\n            return dataViewObjectParser;\r\n        }\r\n        properties = dataViewObjectParser.getProperties();\r\n        for (let objectName in properties) {\r\n            for (let propertyName in properties[objectName]) {\r\n                const defaultValue = dataViewObjectParser[objectName][propertyName];\r\n                dataViewObjectParser[objectName][propertyName] = DataViewObjects.getCommonValue(dataView.metadata.objects, properties[objectName][propertyName], defaultValue);\r\n            }\r\n        }\r\n        return dataViewObjectParser;\r\n    }\r\n    static isPropertyEnumerable(propertyName) {\r\n        return !DataViewObjectsParser.InnumerablePropertyPrefix.test(propertyName);\r\n    }\r\n    static enumerateObjectInstances(dataViewObjectParser, options) {\r\n        let dataViewProperties = dataViewObjectParser && dataViewObjectParser[options.objectName];\r\n        if (!dataViewProperties) {\r\n            return [];\r\n        }\r\n        let instance = {\r\n            objectName: options.objectName,\r\n            selector: null,\r\n            properties: {}\r\n        };\r\n        for (let key in dataViewProperties) {\r\n            if (dataViewProperties.hasOwnProperty(key)) {\r\n                instance.properties[key] = dataViewProperties[key];\r\n            }\r\n        }\r\n        return {\r\n            instances: [instance]\r\n        };\r\n    }\r\n    getProperties() {\r\n        let properties = {}, objectNames = Object.keys(this);\r\n        objectNames.forEach((objectName) => {\r\n            if (DataViewObjectsParser.isPropertyEnumerable(objectName)) {\r\n                let propertyNames = Object.keys(this[objectName]);\r\n                properties[objectName] = {};\r\n                propertyNames.forEach((propertyName) => {\r\n                    if (DataViewObjectsParser.isPropertyEnumerable(objectName)) {\r\n                        properties[objectName][propertyName] =\r\n                            DataViewObjectsParser.createPropertyIdentifier(objectName, propertyName);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        return properties;\r\n    }\r\n}\r\nDataViewObjectsParser.InnumerablePropertyPrefix = /^_/;\r\n//# sourceMappingURL=dataViewObjectsParser.js.map","module.exports = Function('return this')();","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { Visual } from \"../../src/visual\";\nimport powerbiVisualsApi from \"powerbi-visuals-api\";\nimport IVisualPlugin = powerbiVisualsApi.visuals.plugins.IVisualPlugin;\nimport VisualConstructorOptions = powerbiVisualsApi.extensibility.visual.VisualConstructorOptions;\nimport DialogConstructorOptions = powerbiVisualsApi.extensibility.visual.DialogConstructorOptions;\nvar powerbiKey: any = \"powerbi\";\nvar powerbi: any = window[powerbiKey];\nvar rVisualSample118F63583603487791208F4FB8B1D475: IVisualPlugin = {\n    name: 'rVisualSample118F63583603487791208F4FB8B1D475',\n    displayName: 'rVisualSample',\n    class: 'Visual',\n    apiVersion: '3.8.0',\n    create: (options: VisualConstructorOptions) => {\n        if (Visual) {\n            return new Visual(options);\n        }\n        throw 'Visual instance not found';\n    },\n    createModalDialog: (dialogId: string, options: DialogConstructorOptions, initialState: object) => {\n        const dialogRegistry = globalThis.dialogRegistry;\n        if (dialogId in dialogRegistry) {\n            new dialogRegistry[dialogId](options, initialState);\n        }\n    },\n    custom: true\n};\nif (typeof powerbi !== \"undefined\") {\n    powerbi.visuals = powerbi.visuals || {};\n    powerbi.visuals.plugins = powerbi.visuals.plugins || {};\n    powerbi.visuals.plugins[\"rVisualSample118F63583603487791208F4FB8B1D475\"] = rVisualSample118F63583603487791208F4FB8B1D475;\n}\nexport default rVisualSample118F63583603487791208F4FB8B1D475;"],"names":["VisualSettings","rcv_script","rcv_scriptSettings","settings","CorrPlotSettings","method","Visual","options","this","imageDiv","document","createElement","className","imageElement","appendChild","element","dataView","type","viewport","dataViews","length","parseSettings","imageUrl","scriptResult","payloadBase64","src","onResizing","finalViewport","style","height","width","module","exports","Function","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","powerbi","rVisualSample118F63583603487791208F4FB8B1D475","name","displayName","class","apiVersion","create","createModalDialog","dialogId","initialState","dialogRegistry","globalThis","custom","visuals","plugins"],"sourceRoot":""}